var request= new XMLHttpRequest();
request.open(method,url,async); \\ mehtod: get/post url 请求的地址， async 默认为true, true 为异步请求 false 为同步请求
request.setRequestHeader("Content-type","application/x-www-from-urlencoded"); 告诉服务器，发送的数据是表单类型
request.send(string);\\发送请求 。 参数 ，发送到服务器的内容，get请求不填写，get请求的参数嵌套在 URL 中， post请求需要填写



https://www.jianshu.com/p/de5845b4c095 参考博文

application/x-www-form-urlencoded

HTTP会将请求参数用key1=val1&key2=val2的方式进行组织，并放到请求实体里面，注意如果是中文或特殊字符如"/"、","、“:" 等会自动进行URL转码。不支持文件，一般用于表单提交。

multipart/form-data
与application/x-www-form-urlencoded不同，这是一个多部分多媒体类型。首先生成了一个 boundary 用于分割不同的字段，在请求实体里每个参数以------boundary开始，然后是附加信息和参数名，然后是空行，最后是参数内容。多个参数将会有多个boundary块。如果参数是文件会有特别的文件域。最后以------boundary–为结束标识。multipart/form-data支持文件上传的格式，一般需要上传文件的表单则用该类型。

application/json
JSON 是一种轻量级的数据格式，以“键-值”对的方式组织的数据。这个使用这个类型，需要参数本身就是json格式的数据，参数会被直接放到请求实体里，不进行任何处理。服务端/客户端会按json格式解析数据（约定好的情况下）。

与application/json类似，这里用的是xml格式的数据，text/xml的话，将忽略xml数据里的编码格式，

application/xml 和 text/xml



JSON 对象转 字符串  JSON.stringify();
字符串 转 JSON 对象 JSON.pase();